---

- name: "Set defaults"
  include_vars: 'defaults/main.yml'

- name: "Include {{ beat_name }} vars"
  include_vars: '{{ beat_vars_item }}'
  with_first_found:
  - files:
    - 'vars/{{ beat_name }}.yml'
    - default.yml
  loop_control:
    loop_var: beat_vars_item

- name: "{{ beat_name }} - include OS vars"
  include_vars: '{{ item }}'
  with_first_found:
  - files:
    - 'vars/{{ ansible_distribution_id | lower }}.yml'
    - 'vars/{{ ansible_distribution | lower }}.yml'
    - 'vars/{{ ansible_os_family | lower }}.yml'
    - 'vars/{{ ansible_system | lower }}.yml'
    - default.yml

- name: Set config/output/log file vars
  set_fact:
    beat_config_file: '{{ beat_config_path}}/{{ beat_name }}.yml'
    beat_output_file: '{{ beat_logs_path }}/output.json'
    beat_log_file: '{{ beat_logs_path }}/{{ beat_name }}.json'
    beat_registry_file: '{{ beat_data_path }}/{{ registry_file }}'
    beat_metrics_file: '{{ beat_logs_path }}/metrics.json'
#  with_items: '{{ find_result.files }}'

- name: 'Display vars for testing {{ beat_name }}'
  debug:
    var: hostvars[inventory_hostname]
    verbosity: 2

##### BLOCK START
- name: 'Run {{ beat_name }} tasks'
  block:
  - name: "{{ beat_name }} - include tasks"
    include_tasks: '{{ system_item }}'
    with_first_found:
      - '{{ ansible_os_family | lower }}/main.yml'
      - '{{ ansible_system | lower }}/main.yml'
      - unsupported.yml
    loop_control:
      loop_var: system_item
  
  always:
  - name: finding files
    find:
      paths:            '{{ beat_logs_path }}'
      patterns:         "output*.ndjson"
      recurse:          "yes"
      file_type:        "file"
    register: find_result
    when: ansible_os_family != 'Windows'
  
  - name: finding files for windows
    win_find:
      paths:            '{{ beat_logs_path }}'
      patterns:         "output*.ndjson"
      recurse:          "yes"
      file_type:        "file"
    register: find_result
    when: ansible_os_family == 'Windows'

  - name: debugging files finder
    debug:
      var: find_result
    
  - name: Set config/output/log file vars
    set_fact:
      beat_output_file: '{{ item.path }}'
    with_items: '{{ find_result.files }}'
    
  - name: finding files beatname
    find:
      paths:            '{{ beat_logs_path }}'
      patterns:         "{{ beat_name }}*.ndjson"
      recurse:          "yes"
      file_type:        "file"
    register: find_result_beat
    when: ansible_os_family != 'Windows'
  
  - name: finding files beatname for Windows
    win_find:
      paths:            '{{ beat_logs_path }}'
      patterns:         "{{ beat_name }}*.ndjson"
      recurse:          "yes"
      file_type:        "file"
    register: find_result_beat
    when: ansible_os_family == 'Windows'

 
  - name: debugging files finder
    debug:
      var: find_result
 
  - name: Set config/output/log file vars for beatnamed file
    set_fact:
      beat_log_file: '{{ item.path }}'
    with_items: '{{ find_result_beat.files }}'
    
  - name: Save output to host
    fetch:
      src: '{{ beat_log_file }}'
      dest: 'logs/{{ beat_name }}{{ beat_pkg_suffix }}-{{ win_arch | default(ansible_architecture) }}-{{ inventory_hostname }}/output.json'
      flat: yes
    ignore_errors: yes 

  - name: Save log to host
    fetch:
      src: '{{ beat_log_file }}'
      dest: 'logs/{{ beat_name }}{{ beat_pkg_suffix }}-{{ win_arch | default(ansible_architecture) }}-{{ inventory_hostname }}/log.json'
      flat: yes

  - name: Save config to host
    fetch:
      src: '{{ beat_config_file }}'
      dest: 'logs/{{ beat_name }}{{ beat_pkg_suffix }}-{{ win_arch | default(ansible_architecture) }}-{{ inventory_hostname }}/{{ beat_name }}.yml'
      flat: yes

  - name: Save registry to host
    fetch:
      src: '{{ beat_registry_file }}'
      dest: 'logs/{{ beat_name }}{{ beat_pkg_suffix }}-{{ win_arch | default(ansible_architecture) }}-{{ inventory_hostname }}/{{ registry_file }}'
      flat: yes
    when: registry_file != ''

#  - name: Save metrics to host
#    fetch:
#      src: '{{ beat_metrics_file }}'
#      dest: 'logs/{{ beat_name }}{{ beat_pkg_suffix }}-{{ win_arch | default(ansible_architecture) }}-{{ inventory_hostname }}/metrics.json'
#      flat: yes
##### BLOCK END

- name: Run assertions on outputs
  include: '{{ assert_item }}'
  with_first_found:
    - '{{ ansible_os_family | lower }}/assert.yml'
    - '{{ ansible_system | lower }}/assert.yml'
    - common/assert.yml
  loop_control:
    loop_var: assert_item

- name: Run {{ beat_name }} assertions on outputs
  include: '{{ beat_assert_item }}'
  with_first_found:
  - files:
    - '{{ beat_name }}/assert.yml'
    - default.yml
  loop_control:
    loop_var: beat_assert_item
