---

- name: 'Stat {{ beat_name }} output file'
  stat:
    path: '{{ beat_output_file }}'
  register: output_stat

- name: '{{ beat_name }} output file stats'
  debug:
    var: output_stat

- name: "Assert that {{ beat_name }} output file exists"
  assert:
    that:
      - "output_stat.stat.exists"
      - "output_stat.stat.size > 0"

- name: 'Stat {{ beat_name }} log file'
  stat:
    path: '{{ beat_log_file }}'
  register: log_stat

- name: '{{ beat_name }} log file stats'
  debug:
    var: log_stat

- name: 'Assert that {{ beat_name }} log file exists'
  assert:
    that:
      - "log_stat.stat.exists"
      - "log_stat.stat.size > 0"

- name: 'Stat {{ beat_name }} registry file'
  stat:
    path: '{{ beat_registry_file }}'
  register: registry_stat
  when: registry_file != ''

- name: '{{ beat_name }} registry file stats'
  debug:
    var: registry_stat
  when: registry_file != ''

- name: 'Check {{ beat_name }} registry file'
  assert:
    that:
      - "registry_stat.stat.exists"
      - "registry_stat.stat.size > 0"
  when: registry_file != ''

- name: 'Get {{ beat_name }} metrics from logs'
  shell: 'grep "Total non-zero metrics" {{ beat_log_file }} | tail -1'
  register: log_metrics

- set_fact: log_metrics_event='{{ log_metrics.stdout | from_json }}'

- name: '{{ beat_name }} monitoring metrics'
  debug:
    var: log_metrics_event

- name: 'Check {{ beat_name }} has monitoring metrics'
  assert:
    that:
      - "log_metrics_event.monitoring.metrics.beat.cpu.system.ticks >= 0"
      - "log_metrics_event.monitoring.metrics.beat.cpu.system.time.ms >= 0"
      - "log_metrics_event.monitoring.metrics.beat.cpu.total.ticks >= 0"
      - "log_metrics_event.monitoring.metrics.beat.cpu.total.time.ms >= 0"
      - "log_metrics_event.monitoring.metrics.beat.cpu.total.value >= 0"
      - "log_metrics_event.monitoring.metrics.beat.cpu.user.ticks >= 0"
      - "log_metrics_event.monitoring.metrics.beat.cpu.user.time.ms >= 0"
      - "log_metrics_event.monitoring.metrics.beat.info.ephemeral_id"
      - "log_metrics_event.monitoring.metrics.beat.info.uptime.ms"
      - "log_metrics_event.monitoring.metrics.system.cpu.cores"
      - "'1' in log_metrics_event.monitoring.metrics.system.load"
      - "'15' in log_metrics_event.monitoring.metrics.system.load"
      - "'5' in log_metrics_event.monitoring.metrics.system.load"
      - "'1' in log_metrics_event.monitoring.metrics.system.load.norm"
      - "'15' in log_metrics_event.monitoring.metrics.system.load.norm"
      - "'5' in log_metrics_event.monitoring.metrics.system.load.norm"
