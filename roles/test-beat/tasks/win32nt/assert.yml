---

- name: 'Stat {{ beat_name }} output file (win)'
  win_stat:
    path: '{{ beat_output_file }}'
  register: output_stat

- name: '{{ beat_name }} output file stats'
  debug:
    var: output_stat

- name: "Assert that {{ beat_name }} output file exists"
  assert:
    that:
      - "output_stat.stat.exists"
      - "output_stat.stat.size > 0"

- name: 'Stat {{ beat_name }} log file (win)'
  win_stat:
    path: '{{ beat_log_file }}'
  register: log_stat

- name: '{{ beat_name }} log file stats'
  debug:
    var: log_stat

- name: 'Assert that {{ beat_name }} log file exists'
  assert:
    that:
      - "log_stat.stat.exists"
      - "log_stat.stat.size > 0"

- name: 'Stat {{ beat_name }} registry file (win)'
  win_stat:
    path: '{{ beat_registry_file }}'
  register: registry_stat
  when: registry_file != ''

- name: '{{ beat_name }} registry file stats'
  debug:
    var: registry_stat
  when: registry_file != ''

- name: 'Check {{ beat_name }} registry file'
  assert:
    that:
      - "registry_stat.stat.exists"
      - "registry_stat.stat.size > 0"
  when: registry_file != ''

- name: 'Get {{ beat_name }} metrics from logs (win)'
  win_shell: 'cat -Encoding UTF8 {{ beat_log_file }} |
      select-string -Encoding UTF8 "Total non-zero" |
      Select -Expandproperty Line | select -First 1'
  register: log_metrics_win
  when: ansible_system == "Win32NT"

- set_fact: log_metrics_event='{{ log_metrics_win.stdout | from_json }}'
  when: ansible_system == "Win32NT"

- name: 'Check {{ beat_name }} has ephemeral ID (win)'
  assert:
      that: "log_metrics_event.monitoring.metrics.beat.info.ephemeral_id"
