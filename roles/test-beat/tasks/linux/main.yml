---

- name: "Remove {{ beat_name }} data directory"
  file:
    path: '{{ beat_data_path }}'
    state: absent

- name: "Remove {{ beat_name }} logs directory"
  file:
    path: '{{ beat_logs_path }}'
    state: absent

- name: "Pre-run setup for {{ beat_name }}"
  include_tasks: '{{ pre_run_item }}'
  with_first_found:
  - files:
      - 'tasks/{{ beat_name }}/pre-run.yml'
      - tasks/default.yml
  loop_control:
    loop_var: pre_run_item

- name: Replace configuration file with template
  template:
    src: '{{ beat_name }}.yml.j2'
    dest: '{{ beat_cfg }}'
    mode: 0600
  ignore_errors: yes 

- name: Create dir for systemd overrides
  file:
    path: '/etc/systemd/system/{{ beat_service_name }}.service.d'
    state: directory
    mode: 0755

- name: Override log options for systemd to get a log file
  template:
    src: systemd.debug.conf
    dest: '/etc/systemd/system/{{ beat_service_name }}.service.d/debug.conf'
    mode: 0600

- name: 'Start {{ beat_service_name }} service'
  service:
    name: '{{ beat_service_name }}'
    state: restarted

- name: "Post-run setup for {{ beat_name }}"
  include_tasks: '{{ post_run_item }}'
  with_first_found:
  - files:
      - 'tasks/{{ beat_name }}/post-run.yml'
      - tasks/default.yml
  loop_control:
    loop_var: post_run_item

- name: finding files
  find:
    paths:            '{{ beat_logs_path }}'
    patterns:         "output*.ndjson"
    recurse:          "yes"
    file_type:        "file"
  register: find_result

- name: 'Wait for {{ beat_name }} to produce output.json'
  wait_for:
    path: '{{ item.path }}'
    search_regex: '"version"'
    timeout: 20
  with_items: '{{ find_result.files }}'
  
- name: 'Fetch metrics from {{ beat_name }} over HTTP'
  get_url:
    url: http://localhost:5066/stats
    dest: '{{ beat_metrics_file }}'
    force: yes

- name: "Stop {{ beat_service_name }} service"
  service:
    name: '{{ beat_service_name }}'
    state: stopped
