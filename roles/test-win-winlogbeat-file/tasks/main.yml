- name: Ensure no previous ProgramData dir exists
  win_file: path={{ winlogbeat_data_dir }} state=absent

- name: Install Winlogbeat service
  script: run_script.ps1 -script {{ installdir }}\\install-service-{{ beat_name }}.ps1

- name: Replace configuration file with template (windows)
  win_template: src={{beat_name}}.yml dest='{{ beat_cfg }}'

- name: Start Winlogbeat
  win_service: name={{ beat_name }} state=started

- name: Sleep a little
  script: sleep.ps1 -duration 10

- name: Stop Winlogbeat
  win_service: name={{ beat_name }} state=stopped

- name: Uninstall service
  script: run_script.ps1 -script {{ installdir }}\\uninstall-service-{{ beat_name }}.ps1

- name: Stat output file
  win_stat: path={{ winlogbeat_data_dir }}\output\{{ beat_name }}
  register: output_stat

- debug: var=output_stat

- name: Check output file exists
  assert:
    that:
      - "output_stat.stat.exists"
      - "output_stat.stat.size > 0"

- name: Verify output contents
  win_shell: "cat -Encoding UTF8 {{ winlogbeat_data_dir }}\\output\\{{ beat_name }} | select -First 1"
  register: json_output

- set_fact: event="{{ json_output.stdout | from_json }}"

- debug: var=event

- assert:
    that:
      - "'@timestamp' in event"
      - "'log_name' in event"
      - "'source_name' in event"
      - "'computer_name' in event"
      - "'type' in event"
      - "'record_number' in event"
      - "'event_id' in event"
      - "'level' in event"

- name: Stat log file
  win_stat: path={{ winlogbeat_data_dir }}\Logs\winlogbeat
  register: log_stat

- debug: var=log_stat

- name: Check log file
  assert:
    that:
      - "log_stat.stat.exists"
      - "log_stat.stat.size > 0"

- name: Stat registry file
  win_stat: path={{ winlogbeat_data_dir }}\.winlogbeat.yml
  register: registry_stat

- debug: var=registry_stat

- name: Check registry file
  assert:
    that:
      - "registry_stat.stat.exists"
      - "registry_stat.stat.size > 0"

- name: Verify registry contents
  win_shell: "cat {{ winlogbeat_data_dir }}\\.winlogbeat.yml"
  register: registry_output

- set_fact: registry="{{ registry_output.stdout | from_yaml }}"

- debug: var=registry

- assert:
    that:
      - "'update_time' in registry"
      - "'event_logs' in registry"
