- name: Compute vars (binary)
  set_fact:
    beat_url: "{{url_base}}/{{url_dir}}{{beat_name}}{{ beat_pkg_suffix }}-{{version}}-linux-{{bin_arch}}.tar.gz"
    beat_pkg: "{{beat_name}}{{ beat_pkg_suffix }}-{{version}}-linux-{{bin_arch}}.tar.gz"
    beat_cfg: "/tmp/{{beat_name}}{{ beat_pkg_suffix }}-{{version}}-linux-{{bin_arch}}/{{beat_name}}.yml"
    workdir: /tmp
    installdir: /tmp/{{beat_name}}{{ beat_pkg_suffix }}-{{version}}-linux-{{bin_arch}}

- name: Ensure empty output directory
  file: path={{workdir}}/output state=absent

- name: Download package sha512
  get_url: url={{beat_url}}.sha512 dest={{workdir}} validate_certs=no

- name: Download package
  get_url: url={{beat_url}} dest={{workdir}} validate_certs=no

- name: Check file (linux)
  shell: chdir={{workdir}} sha512sum -c {{beat_pkg}}.sha512

- name: Create install directory
  file: path={{installdir}} state=directory

- name: Untar
  shell: chdir={{installdir}} tar xzvf {{workdir}}/{{beat_pkg}} --strip 1

- name: Set metricbeat module period to 1s
  lineinfile:
    dest: "{{installdir}}/modules.d/system.yml"
    regexp: '^  period: 10s'
    line: '  period: 1s'
  when: beat_name == "metricbeat"

- name: Set heartbeat poll period to 1s
  lineinfile:
    dest: "{{installdir}}/heartbeat.yml"
    regexp: '^  schedule: ''@every 10s'''
    line: '  schedule: ''@every 1s'''
  when: beat_name == "heartbeat"

# TODO (andrewkroh on 2018-11-21): Re-enable after go-sysinfo has been patched
# to work on Debian 6. https://github.com/elastic/beats-tester/issues/97
- name: Disable add_host_metadata on Debian 6
  lineinfile:
    dest: "{{installdir}}/{{beat_name}}.yml"
    regexp: '- add_host_metadata: ~'
    line: '#- add_host_metadata: ~'
  when:
    - ansible_os_family == "Debian"
    - ansible_distribution_major_version == "6"

- name: Start in bg
  shell: chdir={{installdir}} ./{{beat_name}} -E output.elasticsearch.enabled=false -E output.file.path={{workdir}}/output -E metricbeat.max_start_delay=0
  async: 45
  poll: 0  # run in bg
  when: "project == 'beats'"

- name: Sleep a little
  shell: sleep 1
  check_mode: no

- name: Curl something (linux)
  shell: wget google.com
  when: beat_name == "packetbeat"

- name: Wait for the output file to be created, should contain type=http
  wait_for: >
    path={{workdir}}/output/packetbeat timeout=5
    search_regex='"type":"http"'
  when: beat_name == "packetbeat"

- name: Wait for the output file to be created, should contain system load
  wait_for: >
    path={{workdir}}/output/{{beat_name}} timeout=5
    search_regex='"load"'
  when: beat_name == "metricbeat"

- name: Wait for the output file to be created, should contain HTTP pinging
  wait_for: >
    path={{workdir}}/output/heartbeat timeout=5
    search_regex='"scheme":"http"'
  when: beat_name == "heartbeat"

- name: Check if version number is correct
  shell: chdir={{installdir}} ./{{beat_name}} version | grep {{ version[0:5] }}
